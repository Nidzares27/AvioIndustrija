@using AvioIndustrija.ViewModels;
@*@model AvioIndustrija.Models.Putnik
*@
@model EditPutnikViewModel
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Putnik</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PutnikId" />
            <div class="form-group">
                <label asp-for="Ime" class="control-label"></label>
                <input asp-for="Ime" class="form-control" />
                <span asp-validation-for="Ime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Prezime" class="control-label"></label>
                <input asp-for="Prezime" class="form-control" />
                <span asp-validation-for="Prezime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Pol" class="control-label"></label><br />
                <input type="radio" asp-for="Pol" checked="@(Model.Pol.StartsWith("M") ? "checked" : false)" name="pol" value="M">
                <label  class="control-label">Muški</label><br>
                <input type="radio" asp-for="Pol" checked="@(Model.Pol.StartsWith("Ž") ? "checked" : false)" name="pol" value="Ž">
                <label  class="control-label">Ženski</label><br>
@*                <input asp-for="Pol" class="form-control" />
*@                <span asp-validation-for="Pol" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" id="cropData" name="CropData" />
            </div>
            <div class="form-group">
                <img id="image" style="max-width: 100%;" src="@(Model.ExistingImageUrl ?? "")"/>
            </div>
            <div class="form-group">
                <label for="imageInput">Upload New Image:</label>
                <input asp-for="Image" type="file" id="imageInput" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>

        @if (ViewBag.ImagePath != null)
        {
            <div>
                <h2>Cropped Image:</h2>
                <img src="@ViewBag.ImagePath" />
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        var image = document.getElementById('image');
        var cropper;

        document.getElementById('imageInput').addEventListener('change', function (e) {
            var files = e.target.files;

            var file = e.target.files[0];
            if (file) {
                var fileType = file.type;
                var validImageTypes = ["image/jpeg", "image/png", "image/gif"];
                if (!validImageTypes.includes(fileType)) {
                    alert("Please upload a valid image file (JPEG, PNG, GIF).");
                    e.target.value = ''; // Clear the input
                    return;
                }
            }

            var done = function (url) {
                image.src = url;
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 3,
                    preview: '.preview'
                });
            };
            var reader;

            if (files && files.length > 0) {
               
                if (URL) {
                    done(URL.createObjectURL(file));
                } else if (FileReader) {
                    reader = new FileReader();
                    reader.onload = function (e) {
                        done(reader.result);
                    };
                    reader.readAsDataURL(file);
                }
            }
        });

        document.querySelector('form').addEventListener('submit', function () {
            if (cropper) {
                var cropData = cropper.getData(true);
                document.getElementById('cropData').value = JSON.stringify(cropData);
            }
        });
    </script>
}
